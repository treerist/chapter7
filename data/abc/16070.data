['snmpwalk.txt', 'README.txt', '.armitage', '.gnome2_private', '.git_trojan.py.swp', 'tcpxtract-1.0.1', 'media', '.rnd', 'test_rsa.key', 'faces', 'aircrack.cap-01.cap', 'test.dic', 'Desktop', '.weevely', 'pw.list', 'paros', 'subprocess', 'plugins', 'bhp.pcap', '.vim', '.pulse', 'installation', 'scan_result.xml', 'layouts', '.maltego', '.armitage.prop', '.gnome2', '.scapy_history', 'bhnet.py', '175.45.178.13', '__MACOSX', 'pic_carver.py', 'bh_sshcmd.py', 'trojan', 'test.php', 'libraries', 'libpcap-1.7.3.tar.gz', 'ReadMe.txt', 'cat', '.gvfs', 'Kali-linux\xe5\xae\x89\xe8\xa3\x85\xe4\xb9\x8b\xe5\x90\x8e\xe7\x9a\x84\xe7\xae\x80\xe5\x8d\x95\xe8\xae\xbe\xe7\xbd\xae - xiao106347\xe7\x9a\x84\xe6\x97\xa5\xe5\xbf\x97 - \xe7\xbd\x91\xe6\x98\x93\xe5\x8d\x9a\xe5\xae\xa2_files', 'haarcascade_frontalface_alt.xml', 'privs.c', 'cache', '.xml', 'content_bruter.py', '.set', '.cache', 'tripwire-2.4.2.2-src', 'proxt.py', '.subversion', 'password.lst', 'context', 'BHP-Code', '.john', 'robots.txt.dist', 'Joomla_3.4.0-Stable-Full_Package.zip', 'fimap.log', 'mail_sniffer.py', 'aircrack.cap-01.kismet.netxml', '.wireshark', 'aircrack.cap-01.csv', 'nc110', '.bashrc', 'all-dirs.txt', '.thumbnails', 'administrator', 'templates', 'DirBusterReport-www.canyu.org-80.txt', 'images', '.xsession-errors', '.gstreamer-0.10', '.gsd_cfg.xml', '.0trace-x4iaIR-2', 'my_project', '.0trace-S5wlfx', 'joomla.xml', '.zenmap', 'test.conf', 'socket', 'sniffer_ip_header_decode.py', 'modules', '154.35.164.8.xml.xml', '154.35.164.8.xml.nmap', 'arper.py', 'arper.pcap', 'php-meter.php', 'threading', '.java', 'libpcap', 'result.html', 'all-extensionless.txt', 'sniffer.py', 'tmp', '.pulse-cookie', 'pictures', 'tcp_server.py', 'Licence.txt', '.0trace-mCvGfc', 'Kali-linux\xe5\xae\x89\xe8\xa3\x85\xe4\xb9\x8b\xe5\x90\x8e\xe7\x9a\x84\xe7\xae\x80\xe5\x8d\x95\xe8\xae\xbe\xe7\xbd\xae - xiao106347\xe7\x9a\x84\xe6\x97\xa5\xe5\xbf\x97 - \xe7\xbd\x91\xe6\x98\x93\xe5\x8d\x9a\xe5\xae\xa2.html', 'index.php', 'all.txt', '.xsession-errors.old', 'web_app_mapper.py', 'SVNDigger.zip', 'tcpxtract-1.0.1.tar.gz', 'includes', '.0trace-x4iaIR', 'tripwire-2.4.2.2-src.tar.bz2', '.mission-control', '.ICEauthority', 'aircrack.cap-01.kismet.csv', 'bin', '.config', '.local', '.ssh', '1.txt', 'server.key', 'getopt', 'udp_client.py', '.viminfo', '.dbus', '.presage', 'git_trojan.py', 'logs', 'web.config.txt', 'BHP-Code.zip', 'language', '.profile', 'rforward.py', 'test', 'tcp_client.py', '.msf4', '.mozilla', 'htaccess.txt', '.bash_history', 'components', 'libpcap-1.7.3', 'sys', '154.35.164.8.xml.gnmap', 'LICENSE.txt', '.gconf', 'cli']